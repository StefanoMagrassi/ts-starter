{"version":3,"file":"runner.js","sourceRoot":"","sources":["../src/runner.ts"],"names":[],"mappings":";AAAA,6BAA6B;;AAG7B,6BAA4C;AAE5C,IAAM,YAAY,GAAG,UAAC,GAAU;IAC9B,OAAO,CAAC,KAAK,CAAC,WAAK,CAAC,WAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AAEF,IAAM,cAAc,GAAG,UAAC,GAAW;IACjC,OAAO,CAAC,GAAG,CAAC,aAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AAEF,sBAAsB;AACT,QAAA,IAAI,GAAG,UAAC,OAAkC;IACrD,OAAA,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,EAAzC,CAAyC,CAAC;AAAvE,CAAuE,CAAC","sourcesContent":["/*tslint:disable:no-console*/\n\nimport {TaskEither} from 'fp-ts/lib/TaskEither';\nimport {ERROR, SUCCESS, toMsg} from './log';\n\nconst endWithError = (err: Error): void => {\n  console.error(ERROR(toMsg(err)));\n  process.exit(1);\n};\n\nconst endWithSuccess = (msg: string): void => {\n  console.log(SUCCESS(msg));\n  process.exit(0);\n};\n\n// --- Run the program\nexport const main = (program: TaskEither<Error, string>): Promise<void> =>\n  program.run().then(result => result.fold(endWithError, endWithSuccess));\n"]}
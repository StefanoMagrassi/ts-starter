{"version":3,"file":"deps.js","sourceRoot":"","sources":["../src/deps.ts"],"names":[],"mappings":";;AAAA,6CAA+C;AAC/C,uBAAyB;AACzB,2BAA6B;AAE7B,mDAAqE;AACrE,+CAA4C;AAE5C,6BAA4C;AAC5C,6BAAoC;AAEpC,IAAM,IAAI,GAAG,UAAC,GAAW,EAAE,GAAW;IACpC,OAAA,oBAAO,CAAuC,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAC,GAAG,KAAA,EAAC,CAAC;AAA7E,CAA6E,CAAC;AAEnE,QAAA,mBAAmB,GAAG,UAAC,IAAY;IAC9C,OAAA,mBAAa,CAAC,6BAA6B,CAAC;SACzC,GAAG,CAAS,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;SACvD,KAAK,CAAC,UAAA,IAAI;QACT,OAAA,oBAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;aAC7C,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,aAAa,EAAb,CAAa,CAAC;aACvB,GAAG,CAAC,uBAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;aAC9B,KAAK,CAAC,UAAA,GAAG;YACR,OAAA,YAAM,CAAC,UAAI,CAAC,4BAA4B,CAAC,CAAC;iBACvC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAI,GAAG,SAAI,IAAM,EAAE,IAAI,CAAC,EAA5B,CAA4B,CAAC;iBACxC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,YAAM,CAAC,aAAO,CAAC,wBAAwB,CAAC,CAAC,EAAzC,CAAyC,CAAC;QAFxD,CAEwD,CACzD;aACA,GAAG,CAAC,mBAAQ,CAAC,IAAI,CAAC,CAAC;IARtB,CAQsB,CACvB;AAZH,CAYG,CAAC","sourcesContent":["import * as child_process from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport {TaskEither, taskEither, taskify} from 'fp-ts/lib/TaskEither';\nimport {constant} from 'fp-ts/lib/function';\n\nimport {INFO, SUCCESS, logger} from './log';\nimport {getPackageTpl} from './pkg';\n\nconst exec = (cmd: string, cwd: string): TaskEither<Error, string> =>\n  taskify<string, {cwd: string}, Error, string>(child_process.exec)(cmd, {cwd});\n\nexport const installDependencies = (dest: string): TaskEither<Error, string> =>\n  getPackageTpl('package.devDependecies.json')\n    .map<string>((depsList: string[]) => depsList.join(' '))\n    .chain(deps =>\n      taskify(fs.access)(path.join(dest, 'yarn.lock'))\n        .map(_ => 'yarn add -D')\n        .alt(taskEither.of('npm i -D'))\n        .chain(cmd =>\n          logger(INFO('Installing dependencies...'))\n            .chain(_ => exec(`${cmd} ${deps}`, dest))\n            .chain(_ => logger(SUCCESS('Dependencies installed')))\n        )\n        .map(constant('OK'))\n    );\n"]}